<!DOCTYPE html>
html(lang="en")
    head
        meta(charset="UTF-8")
        meta(name="viewport", content="width=device-width, initial-scale=1.0")
        meta(http-equiv="X-UA-Compatible", content="ie=edge")
        title Document
        link(rel="stylesheet", href="https://cdn.bootcss.com/bootstrap/3.3.6/css/bootstrap.min.css")
        link(rel="stylesheet", href="public/css/style.css")
    body


        nav.navbar.navbar-default(role='navigation')
            // Brand and toggle get grouped for better mobile display
            .navbar-header
                button.navbar-toggle(type='button', data-toggle='collapse', data-target='.navbar-ex1-collapse')
                    span.sr-only Toggle navigation
                    span.icon-bar
                    span.icon-bar
                    span.icon-bar
                a.navbar-brand(href='#') Title
            // Collect the nav links, forms, and other content for toggling
            .collapse.navbar-collapse.navbar-ex1-collapse
                ul.nav.navbar-nav
                    li.active
                        a(href='#') Link
                    li
                        a(href='#') Link
                form.navbar-form.navbar-left(role='search')
                    .form-group
                        input.form-control(type='text', placeholder='Search')
                    button.btn.btn-default(type='submit') Submit
                ul.nav.navbar-nav.navbar-right
                    li
                        a(href='#') Link
                    li.dropdown
                        a.dropdown-toggle(href='#', data-toggle='dropdown')
                            b.caret
                        ul.dropdown-menu
                            li
                                a(href='#') Action
                            li
                                a(href='#') Another action
                            li
                                a(href='#') Something else here
                            li
                                a(href='#') Separated link

        .container-fluid
            .row
                .col-xs-3.col-sm-3.col-md-3.col-lg-3
                    .row
                        .col-xs-12.col-sm-12.col-md-12.col-lg-12
                            a.btn.btn-primary(data-toggle='modal', href='#add_match_set') add matchSet
                    .row
                        .col-xs-12.col-sm-12.col-md-12.col-lg-12(data-bind="foreach: { data: watchSets, as: 'watchSet'}")
                            .bs-callout(data-bind="click: function(){\
                                                        if( $data !== $root.watchSet() ){\
                                                            $root.watchSet($data);\
                                                        }\
                                                    },\
                                                    css: {\
                                                        'bs-callout-info' : $data === $root.watchSet()\
                                                    }")
                                h4(data-bind="text:watchSet.root") here will be a root


                .col-xs-9.col-sm-9.col-md-9.col-lg-9
                    // ko if: watchSet
                    h2
                        | root : 
                        span(data-bind="text: watchSet().root") here will be a root

                    .btn-toolbar
                        .btn-group
                            // ko if: watchSet().isWatching
                            button.btn.btn-default(type='button' data-bind="click: function(){ watchSet().stop() }") Stop
                            // /ko 
                            // ko ifnot: watchSet().isWatching
                            button.btn.btn-default(type='button' data-bind="click: function(){ watchSet().watch() }") Watch
                            // /ko 
                    hr
                    .btn-toolbar
                        .btn-group
                            label.btn.btn-default(data-bind="css:{active: tab() == 'options'}, ")
                                input(type='radio', name='', value='options', data-bind="checked: tab") 
                                | options
                            label.btn.btn-default(data-bind="css:{active: tab() == 'changes'}, visible: watchSet().isWatching")
                                input(type='radio', name='', value='changes', data-bind="checked: tab") 
                                | changes


                    div(data-bind="visible: tab() == 'options'")

                        .bs-callout.bs-callout-warning
                            h4 includes
                            span
                                editable-text(params="value: watchSet().includes") some/glob/pattern
                            h4 excludes
                            span
                                editable-text(params="value: watchSet().excludes") some/glob/pattern

                        .bs-callout.bs-callout-warning
                            h4 on change process
                            .form
                                .form-group
                                    label.control-label push to api
                                    editable-text(params="value: watchSet().deployApi")
                                .form-group
                                    label.control-label relative to
                                    editable-text(params="value:  watchSet().deployPath")
                                .form-group(data-bind="if: watchSet().deployTestInfo")
                                    .alert(data-bind="text: watchSet().deployTestInfo,\
                                                        css: {\
                                                            'alert-success': watchSet().deployTestStatus() == 1,\
                                                            'alert-danger': watchSet().deployTestStatus() == 2,\
                                                        }")
                                .form-group
                                    .btn.btn-default(data-bind="click: watchSet().testDeploy.bind(watchSet())") 
                                        | test deploy
                            

                    div(role="visible: watchSet().isWatching && tab() == 'changes' ") 
                        // ko if: watchSet().lastFiveChangeSet.length
                        // ko foreach: { data: watchSet().lastFiveChangeSet, as: 'changeSet'}
                        p(data-bind="text: new Date(changeSet.timeStamp).toString()") 123123123123
                        ul.list-group
                            // ko foreach: { data: changeSet.shouldProcess, as: 'fileInfo'}
                            li.list-group-item.list-group-item-success(data-bind="text: fileInfo.fullPath")
                            // /ko 
                            // ko foreach: { data: changeSet.shouldNotProcess, as: 'fileInfo'}
                            li.list-group-item.list-group-item-danger(data-bind="text: fileInfo.fullPath")
                            // /ko 
                        // /ko 
                        // /ko 
                        // ko ifnot: watchSet().lastFiveChangeSet.length
                        h2 no changes here
                        // /ko 


                    // /ko 
                    // ko ifnot: watchSet
                    h2 
                        | you dont have any watchSet, 
                        a(data-toggle='modal', href='#add_match_set') add one
                        |  first
                    // /ko 

        #add_match_set.modal.fade
            .modal-dialog
                .modal-content
                    .modal-header
                        button.close(type='button', data-dismiss='modal', aria-hidden='true') &times;
                        h4.modal-title add matchSet

                    .modal-body
                        .form-horizontal
                            .form-group
                                .col-sm-2 root
                                .col-sm-10
                                    input.form-control(type='text', data-bind='value:addInfo.root')
                            .form-group
                                .col-sm-2 includes
                                .col-sm-10
                                    input.form-control(type='text', data-bind='value:addInfo.includes')
                            .form-group
                                .col-sm-2 excludes
                                .col-sm-10
                                    input.form-control(type='text', data-bind='value:addInfo.excludes')

                    .modal-footer
                        button.btn.btn-default(type='button', data-dismiss='modal') Close
                        button.btn.btn-primary(type='button', data-dismiss='modal', data-bind='click: addWatchSet') Save changes

        script(src="https://cdn.bootcss.com/jquery/1.10.1/jquery.js")
        script(src="https://cdn.bootcss.com/bootstrap/3.3.6/js/bootstrap.min.js")
        script(src="https://cdn.bootcss.com/require.js/2.3.5/require.js")
        script.
            requirejs.config({
                paths: {
                    ko: 'https://cdn.bootcss.com/knockout/3.4.2/knockout-debug'
                }
            })
            require(['public/app'], function( app ){ });
